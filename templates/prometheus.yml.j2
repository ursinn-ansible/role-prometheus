global:
  # How frequently to scrape targets from this job.
  scrape_interval: 15s

  # How frequently to evaluate rules.
  evaluation_interval: 30s

  # Per-scrape limit on the number of scraped samples that will be accepted.
  # If more than this number of samples are present after metric relabeling
  # the entire scrape will be treated as failed. 0 means no limit.
  sample_limit: 1500

  # Limit on the number of labels that will be accepted per sample. If more
  # than this number of labels are present on any sample post metric-relabeling,
  # the entire scrape will be treated as failed. 0 means no limit.
  label_limit: 30
  
  # Limit on the length (in bytes) of each individual label name. If any label
  # name in a scrape is longer than this number post metric-relabeling, the
  # entire scrape will be treated as failed. Note that label names are UTF-8
  # encoded, and characters can take up to 4 bytes. 0 means no limit.
  label_name_length_limit: 200

  # Limit on the length (in bytes) of each individual label value. If any label
  # value in a scrape is longer than this number post metric-relabeling, the
  # entire scrape will be treated as failed. Note that label values are UTF-8
  # encoded, and characters can take up to 4 bytes. 0 means no limit.
  label_value_length_limit: 200

  # The labels to add to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager). 
  # Environment variable references `${var}` or `$var` are replaced according 
  # to the values of the current environment variables. 
  # References to undefined variables are replaced by the empty string.
  # The `$` character can be escaped by using `$$`.
  external_labels:
    prometheus_instance: {{ inventory_hostname }}

# A list of scrape configurations.
scrape_configs:
  - job_name: prometheus

    honor_labels: true
    # scrape_interval is defined by the configured global (15s).
    # scrape_timeout is defined by the global default (10s).

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    fallback_scrape_protocol: PrometheusText0.0.4

    scrape_failure_log_file: fail_prom.log
    file_sd_configs:
      - files:
          - foo/*.slow.json
          - foo/*.slow.yml
          - single/file.yml
        refresh_interval: 10m
      - files:
          - bar/*.yaml

    static_configs:
      - targets: ["localhost:9090", "localhost:9191"]
        labels:
          my: label
          your: label

    http_headers:
      foo:
        values: ["foobar"]
        secrets: ["bar", "foo"]
        files: ["valid_password_file"]

    relabel_configs:
      - source_labels: [job, __meta_dns_name]
        regex: (.*)some-[regex]
        target_label: job
        replacement: foo-${1}
        # action defaults to 'replace'
      - source_labels: [abc]
        target_label: cde
      - replacement: static
        target_label: abc
      - regex:
        replacement: static
        target_label: abc
      - source_labels: [foo]
        target_label: abc
        action: keepequal
      - source_labels: [foo]
        target_label: abc
        action: dropequal

    authorization:
      credentials_file: valid_token_file

    tls_config:
      min_version: TLS10

{% for item in role_prometheus_config_targets %}
  - job_name: {{ item.key }}
    scheme: 'https'
    static_configs:
      - targets:
{% for url in item.value.urls %}
        - {{ url }}
{% endfor %}
{% endfor %}

{% for item in role_prometheus_config_targets_basicAuth %}
  - job_name: {{ item.key }}
    scheme: 'https'
    basic_auth:
      username: "{{ item.value.username }}"
      password: "{{ item.value.password  }}"
    static_configs:
      - targets:
{% for url in item.value.urls %}
        - {{ url }}
{% endfor %}
{% endfor %}

{% if role_prometheus_config_targets_bgptools_export_id is defined %}
  - job_name: 'bgptools-export'
    scheme: https
    metrics_path: /prom/{{ role_prometheus_config_targets_bgptools_export_id }}
    scrape_interval: 30s
    static_configs:
      - targets:
          - bgp.tools
{% endif %}

{% if role_prometheus_config_targets_node_exporter is defined %}
  - job_name: node_exporter
    #scheme: 'https'
    basic_auth:
      username: "{{ role_prometheus_config_targets_node_exporter_username }}"
      password: "{{ role_prometheus_config_targets_node_exporter_password }}"
    static_configs:
{% for node_exporter_item in role_prometheus_config_targets_node_exporter %}
      - targets: [{{ node_exporter_item.url }}]
        labels:
          instance: {{ node_exporter_item.label }}
{% endfor %}
{% endif %}

{% if role_prometheus_config_targets_matrix is defined %}
  - job_name: 'synapse'
    metrics_path: /metrics/synapse/main-process
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          job: "matrix_master"

  - job_name: 'matrix-synapse-worker-generic-0'
    metrics_path: /metrics/synapse/worker/generic-worker-0
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: generic-worker-0
          job: "matrix_generic_worker"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-0-events'
    metrics_path: /metrics/synapse/worker/stream-writer-0-events
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-0-events
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-1-typing'
    metrics_path: /metrics/synapse/worker/stream-writer-1-typing
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-1-typing
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-2-to-device'
    metrics_path: /metrics/synapse/worker/stream-writer-2-to_device
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-2-to_device
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-3-account-data'
    metrics_path: /metrics/synapse/worker/stream-writer-3-account_data
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-3-account_data
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-4-receipts'
    metrics_path: /metrics/synapse/worker/stream-writer-4-receipts
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-4-receipts
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-5-presence'
    metrics_path: /metrics/synapse/worker/stream-writer-5-presence
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-5-presence
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-federation-sender-0'
    metrics_path: /metrics/synapse/worker/federation-sender-0
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: federation-sender-0
          job: "matrix_federation_sender"
          app: matrix_federation_sender

  - job_name: 'matrix-synapse-worker-pusher-0'
    metrics_path: /metrics/synapse/worker/pusher-0
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: pusher-0
          job: "matrix_pusher"
          app: matrix_pusher

  - job_name: 'matrix-synapse-worker-appservice-0'
    metrics_path: /metrics/synapse/worker/appservice-0
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: appservice-0
          job: "matrix_appservice"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-user-dir-0'
    metrics_path: /metrics/synapse/worker/user-dir-0
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: user-dir-0
          job: "matrix_user_dir"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-media-repository-0'
    metrics_path: /metrics/synapse/worker/media-repository-0
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: media-repository-0
          job: "matrix_media_repository"
          app: matrix_media_repository

  - job_name: 'matrix-synapse-worker-background-0'
    metrics_path: /metrics/synapse/worker/background-0
    scheme: https
    basic_auth:
      username: "{{ role_prometheus_config_targets_matrix_username }}"
      password: "{{ role_prometheus_config_targets_matrix_password }}"
    static_configs:
      - targets:
{% for url in role_prometheus_config_targets_matrix %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: background-0
          job: "matrix_background"
          app: matrix_generic_worker
{% endif %}
