# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
{% set prometheus = app_prometheus.prometheus %}
{% if prometheus.urls is defined %}
  - job_name: prometheus
    scheme: 'https'
    basic_auth:
      username: "{{ prometheus.username }}"
      password: "{{ prometheus.password }}"
    static_configs:
      - targets:
{% for url in prometheus.urls %}
        - {{ url }}
{% endfor %}
{% endif %}

{% set grafana = app_prometheus.grafana %}
{% if grafana.urls is defined %}
  - job_name: grafana
    scheme: 'https'
    basic_auth:
      username: "{{ grafana.username }}"
      password: "{{ grafana.password }}"
    static_configs:
      - targets:
{% for url in grafana.urls %}
        - {{ url }}
{% endfor %}
{% endif %}

{% set loki = app_prometheus.loki %}
{% if loki.urls is defined %}
  - job_name: loki
    scheme: 'https'
    basic_auth:
      username: "{{ loki.username }}"
      password: "{{ loki.password }}"
    static_configs:
      - targets:
{% for url in loki.urls %}
        - {{ url }}
{% endfor %}
{% endif %}

{% set promtail = app_prometheus.promtail %}
{% if promtail.urls is defined %}
  - job_name: promtail
    scheme: 'https'
    basic_auth:
      username: "{{ promtail.username }}"
      password: "{{ promtail.password }}"
    static_configs:
      - targets:
{% for url in promtail.urls %}
        - {{ url }}
{% endfor %}
{% endif %}

{% set node_exporter = app_prometheus.node_exporter %}
{% if node_exporter.urls is defined %}
  - job_name: node_exporter
    scheme: 'https'
    basic_auth:
      username: "{{ node_exporter.username }}"
      password: "{{ node_exporter.password }}"
    static_configs:
{% for node_exporter_item in node_exporter.urls %}
      - targets: [{{ node_exporter_item.url }}]
        labels:
          instance: {{ node_exporter_item.label }}
{% endfor %}
{% endif %}

{% set bird_exporter = app_prometheus.bird_exporter %}
{% if bird_exporter.urls is defined %}
  - job_name: bird_exporter
    static_configs:
      - targets:
{% for url in bird_exporter.urls %}
        - {{ url }}:9324
{% endfor %}
{% endif %}

{% set flow_exporter = app_prometheus.flow_exporter %}
{% if flow_exporter.urls is defined %}
  - job_name: flow-exporter
    scrape_interval: 5s
    static_configs:
      - targets:
{% for url in flow_exporter.urls %}
        - {{ url }}:9590
{% endfor %}
{% endif %}

{% if app_prometheus.bgptools_export_id is defined %}
  - job_name: 'bgptools-export'
    scheme: https
    metrics_path: /prom/{{ app_prometheus.bgptools_export_id }}
    scrape_interval: 30s
    static_configs:
      - targets:
          - bgp.tools
{% endif %}

{% set matrix = app_prometheus.matrix %}
{% if matrix.urls is defined %}
  - job_name: 'synapse'
    metrics_path: /metrics/synapse/main-process
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          job: "matrix_master"

  - job_name: 'matrix-synapse-worker-generic-0'
    metrics_path: /metrics/synapse/worker/generic-worker-0
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: generic-worker-0
          job: "matrix_generic_worker"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-0-events'
    metrics_path: /metrics/synapse/worker/stream-writer-0-events
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-0-events
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-1-typing'
    metrics_path: /metrics/synapse/worker/stream-writer-1-typing
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-1-typing
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-2-to-device'
    metrics_path: /metrics/synapse/worker/stream-writer-2-to_device
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-2-to_device
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-3-account-data'
    metrics_path: /metrics/synapse/worker/stream-writer-3-account_data
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-3-account_data
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-4-receipts'
    metrics_path: /metrics/synapse/worker/stream-writer-4-receipts
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-4-receipts
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-stream-writer-5-presence'
    metrics_path: /metrics/synapse/worker/stream-writer-5-presence
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: stream-writer-5-presence
          job: "matrix_stream_writer"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-federation-sender-0'
    metrics_path: /metrics/synapse/worker/federation-sender-0
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: federation-sender-0
          job: "matrix_federation_sender"
          app: matrix_federation_sender

  - job_name: 'matrix-synapse-worker-pusher-0'
    metrics_path: /metrics/synapse/worker/pusher-0
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: pusher-0
          job: "matrix_pusher"
          app: matrix_pusher

  - job_name: 'matrix-synapse-worker-appservice-0'
    metrics_path: /metrics/synapse/worker/appservice-0
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: appservice-0
          job: "matrix_appservice"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-user-dir-0'
    metrics_path: /metrics/synapse/worker/user-dir-0
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: user-dir-0
          job: "matrix_user_dir"
          app: matrix_generic_worker

  - job_name: 'matrix-synapse-worker-media-repository-0'
    metrics_path: /metrics/synapse/worker/media-repository-0
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: media-repository-0
          job: "matrix_media_repository"
          app: matrix_media_repository

  - job_name: 'matrix-synapse-worker-background-0'
    metrics_path: /metrics/synapse/worker/background-0
    scheme: https
    basic_auth:
      username: "{{ matrix.username }}"
      password: "{{ matrix.password }}"
    static_configs:
      - targets:
{% for url in matrix.urls %}
        - {{ url }}
{% endfor %}
        labels:
          worker_id: background-0
          job: "matrix_background"
          app: matrix_generic_worker
{% endif %}