---
- name: Create prometheus config volume
  community.docker.docker_volume:
    name: "{{ app_prometheus_docker_volume_config }}"

- name: Create prometheus data volume
  community.docker.docker_volume:
    name: "{{ app_prometheus_docker_volume_data }}"

- name: Ensure prom/prometheus image is pulled
  community.docker.docker_image:
    name: "{{ app_prometheus_docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove prometheus container
  community.docker.docker_container:
    name: "{{ app_prometheus_docker_container }}"
    state: absent
  when: pulled.changed

- name: Get infos on prometheus container
  community.docker.docker_container_info:
    name: "{{ app_prometheus_docker_container }}"
  register: result

- name: Create prometheus container
  community.docker.docker_container:
    image: "{{ app_prometheus_docker_image }}"
    mounts:
     - source: "{{ app_prometheus_docker_volume_config }}"
       target: /etc/prometheus
     - source: "{{ app_prometheus_docker_volume_data }}"
       target: /prometheus
    name: "{{ app_prometheus_docker_container }}"
    command: --web.config.file=/etc/prometheus/web-config.yml --config.file=/etc/prometheus/prometheus.yml
    networks:
     - name: "{{ app_prometheus_docker_network }}"
    restart_policy: unless-stopped
    state: started
  when:
    pulled.changed
    or
    result.exists == false

- name: Create tmp prometheus directory
  ansible.builtin.file:
    path: "{{ app_prometheus_tmp_dir }}"
    state: directory
  when:
    result.exists == false

- name: Copy prometheus files
  ansible.builtin.template:
    src: "{{ item }}.yml.j2"
    dest: "{{ app_prometheus_tmp_dir }}/{{ item }}.yml"
  with_items:
    - "prometheus"
    - "web-config"
  when:
    result.exists == false

- name: Copy config files into prometheus container
  shell: "docker cp {{ app_prometheus_tmp_dir }}/. {{ app_prometheus_docker_container }}:/etc/prometheus"
  when:
    result.exists == false

- name: Remove tmp prometheus directory
  ansible.builtin.file:
    path: "{{ app_prometheus_tmp_dir }}"
    state: absent
  when:
    result.exists == false

- name: Restart prometheus container
  community.docker.docker_container:
    name: "{{ app_prometheus_docker_container }}"
    restart: yes
  when:
    result.exists == false