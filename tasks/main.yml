---
- name: set vars
  set_fact:
    docker_image: '{{ role_prometheus_image }}'
    docker_container: '{{ role_prometheus_container }}'
    docker_volume_config: '{{ role_prometheus_volume }}_config'
    docker_volume_data: '{{ role_prometheus_volume }}_data'
    docker_network: '{{ role_prometheus_network }}'
    tmp_dir: '{{ role_prometheus_tmp_dir }}'

- name: Ensure image is pulled
  community.docker.docker_image:
    name: "{{ docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    state: absent
  when: pulled.changed

- name: Get infos on container
  community.docker.docker_container_info:
    name: "{{ docker_container }}"
  register: result

- name: Create config volume
  community.docker.docker_volume:
    name: "{{ docker_volume_config }}"

- name: Create data volume
  community.docker.docker_volume:
    name: "{{ docker_volume_data }}"

- name: Create network
  community.docker.docker_network:
    name: "{{ docker_network }}"
    driver_options:
          com.docker.network.bridge.name: "br-{{ docker_network }}"

- name: Create prometheus container
  community.docker.docker_container:
    image: "{{ docker_image }}"
    volumes:
     - '{{ docker_volume_config }}:/etc/prometheus:Z'
     - '{{ docker_volume_data }}:/prometheus:Z'
    name: "{{ docker_container }}"
    networks:
     - name: "{{ docker_network }}"
    restart_policy: unless-stopped
    state: started
  when:
    pulled.changed
    or
    result.exists == false

- name: Create tmp directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: directory
  when:
    result.exists == false

- name: Copy prometheus file
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "{{ tmp_dir }}/prometheus.yml"
  when:
    result.exists == false

- name: Copy config file into prometheus container
  shell: "docker cp {{ tmp_dir }}/prometheus.yml {{ docker_container }}:/etc/prometheus"
  when:
    result.exists == false

- name: Remove tmp directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: absent
  when:
    result.exists == false

- name: Restart container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    restart: yes
  when:
    result.exists == false
